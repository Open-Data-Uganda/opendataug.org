version: "3.8"

services:
  web:
    build:
      context: ./web
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
    volumes:
      - ./web:/app
      - /app/node_modules

  app:
    build:
      context: ./app
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    environment:
      - NODE_ENV=development
    volumes:
      - ./app:/app
      - /app/node_modules
    depends_on:
      - backend

  docs:
    build:
      context: ./docs
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
    volumes:
      - ./docs:/app
      - /app/node_modules

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - DB_HOST=postgres
      - DB_USER=postgres
      - DB_PASSWORD=D5YNyg1qZuUGYHgrC57ivx2LXasiE1IC
      - DB_NAME=SSPTRBnDjHpKHrESuDkq
      - DB_PORT=5432
    volumes:
      - ./backend:/app
    depends_on:
      - postgres

  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=D5YNyg1qZuUGYHgrC57ivx2LXasiE1IC
      - POSTGRES_DB=SSPTRBnDjHpKHrESuDkq
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data:

networks:
  default:
    driver: bridge
