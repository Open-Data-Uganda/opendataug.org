services:
  web:
    build:
      context: ./web
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    restart: unless-stopped

  app:
    build:
      context: ./app
      dockerfile: Dockerfile
    environment:
      NODE_ENV: production
    ports:
      - "5173:80"
    depends_on:
      - backend
    env_file:
      - ./app/.env
    restart: unless-stopped

  docs:
    build:
      context: ./docs
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - ./backend/.env
    ports:
      - "8080:8080"
    environment:
      - DB_HOST=postgres
      - DB_USER=postgres
      - DB_PASSWORD=D5YNyg1qZuUGYHgrC57ivx2LXasiE1IC
      - DB_NAME=SSPTRBnDjHpKHrESuDkq
      - DB_PORT=5432
    depends_on:
      - postgres
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=D5YNyg1qZuUGYHgrC57ivx2LXasiE1IC
      - POSTGRES_DB=SSPTRBnDjHpKHrESuDkq
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  default:
    driver: bridge
